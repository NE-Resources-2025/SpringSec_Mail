spring.application.name=Secure

spring.security.user.name=edwige
spring.security.user.password=1707

#logging.level.org.hibernate=DEBUG
#logging.level.org.springframework=DEBUG

#Log DB executions
spring.jpa.show-sql=true
#reflect all changes immediately to psql
spring.jpa.hibernate.ddl-auto=update
#SQL initialization scripts (e.g., schema.sql) will always be executed, regardless of whether the database schema already exists.
spring.sql.init.mode=always
spring.datasource.url=jdbc:postgresql://localhost:5432/rra_db1?useSSL=false
spring.datasource.username=postgres
spring.datasource.password=Edwige_sroot
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#The schema will always be initialized, even if it already exists.
spring.session.jdbc.initialize-schema=always


# jwt parameters
jwt.secret=${`JWT_SECRET`}
jwt.expiresIn=86400000


spring.mail.host=smtp.gmail.com
spring.mail.username=edwigeakuzwe6@gmail.com
spring.mail.port=587
spring.mail.password=${`SMTP_PASSWORD`}
spring.mail.protocol=smtp
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.port=25
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.debug=true

#swagger apis
server.port=8080
openapi.service.url=http://localhost:8080
openapi.service.title=SpringBoot API Documentation
openapi.service.version=1.0.0
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.operationsSorter=method



#default user
admin.username = admin
admin.email = admin@gmail.com
admin.password = password
admin.firstName = Admin
admin.lastName = User
admin.phoneNumber = 0787023425
admin.nationalId = 1200080000123041